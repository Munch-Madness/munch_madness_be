---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=AIzaSyA14LGzl8LmOtXHaGnqSW3CwyZQxFuVl90&location=39.7752563,-105.0498966&radius=1500&type=restaurant
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Mon, 28 Aug 2023 19:51:48 GMT
      Expires:
      - Mon, 28 Aug 2023 19:56:48 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '43027'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=189
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 28 Aug 2023 19:51:48 GMT
recorded_with: VCR 6.2.0
